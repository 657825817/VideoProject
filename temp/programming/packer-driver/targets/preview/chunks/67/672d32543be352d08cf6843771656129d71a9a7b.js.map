{"version":3,"sources":["file:///D:/CocosCreator/VideoProject/assets/Script/VideoController.ts"],"names":["_decorator","Component","VideoPlayer","log","resources","ccclass","property","VideoController","onLoad","videoPlayer","load","err","clip","message","videoClip","play","onReadyToPlay","onPlaying","onPaused","onStopped","onCompleted","onMetaLoaded","onClicked","onError"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,G,OAAAA,G;AAA8BC,MAAAA,S,OAAAA,S;;;;;;;;;OACrE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;iCAGjBO,e,WADZF,OAAO,CAAC,iBAAD,C,UAEHC,QAAQ,CAACJ,WAAD,C,2BAFb,MACaK,eADb,SACqCN,SADrC,CAC+C;AAAA;AAAA;;AAAA;AAAA;;AAI3CO,QAAAA,MAAM,GAAG;AACL,cAAI,KAAKC,WAAT,EAAsB;AAElB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACAL,YAAAA,SAAS,CAACM,IAAV,CAAe,cAAf,EAA+B,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC1C,kBAAID,GAAJ,EAAS;AACLR,gBAAAA,GAAG,4BAA0BQ,GAAG,CAACE,OAA9B,CAAH;AACA;AACH,eAJyC,CAK1C;;;AACA,kBAAMC,SAAoB,GAAGF,IAA7B,CAN0C,CAO1C;;AACA,mBAAKH,WAAL,CAAiBG,IAAjB,GAAwBE,SAAxB;AACA,mBAAKL,WAAL,CAAiBM,IAAjB;AACH,aAVD;AAWH;AACJ;;AAEDC,QAAAA,aAAa,GAAG;AACZb,UAAAA,GAAG,CAAC,wBAAD,CAAH;;AACA,cAAI,KAAKM,WAAT,EAAsB;AAClB,iBAAKA,WAAL,CAAiBM,IAAjB;AACH;AACJ;;AAEDE,QAAAA,SAAS,GAAG;AACRd,UAAAA,GAAG,CAAC,kBAAD,CAAH;AACH;;AAEDe,QAAAA,QAAQ,GAAG;AACPf,UAAAA,GAAG,CAAC,iBAAD,CAAH;AACH;;AAEDgB,QAAAA,SAAS,GAAG;AACRhB,UAAAA,GAAG,CAAC,kBAAD,CAAH;AACH;;AAEDiB,QAAAA,WAAW,GAAG;AACVjB,UAAAA,GAAG,CAAC,sBAAD,CAAH;AACH;;AAEDkB,QAAAA,YAAY,GAAG;AACXlB,UAAAA,GAAG,CAAC,wBAAD,CAAH;AACH;;AAEDmB,QAAAA,SAAS,GAAG;AACRnB,UAAAA,GAAG,CAAC,kBAAD,CAAH;AACH;;AAEDoB,QAAAA,OAAO,GAAG;AACNpB,UAAAA,GAAG,CAAC,mCAAD,CAAH;AACH;;AAlF0C,O;;;;;iBAET,I","sourcesContent":["import { _decorator, Component, VideoPlayer, log, assetManager, VideoClip, resources } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('VideoController')\r\nexport class VideoController extends Component {\r\n    @property(VideoPlayer)\r\n    videoPlayer: VideoPlayer | null = null;\r\n\r\n    onLoad() {\r\n        if (this.videoPlayer) {\r\n\r\n            // //服务器加载\r\n            // assetManager.loadRemote('SceneryVideo', { reloadAsset: true }, (err, clip) => {\r\n            //     if (err) {\r\n            //         log(`Failed to load video: ${err.message}`);\r\n            //         return;\r\n            //     }\r\n\r\n            //     // 转换为 VideoClip 类型\r\n            //     const videoClip: VideoClip = clip as VideoClip;\r\n\r\n            //     // 设置 VideoPlayer 的 clip\r\n            //     this.videoPlayer!.clip = videoClip;\r\n\r\n            //     // 添加事件监听\r\n            //     this.videoPlayer!.node.on('ready-to-play', this.onReadyToPlay, this);\r\n            //     this.videoPlayer!.node.on('playing', this.onPlaying, this);\r\n            //     this.videoPlayer!.node.on('paused', this.onPaused, this);\r\n            //     this.videoPlayer!.node.on('stopped', this.onStopped, this);\r\n            //     this.videoPlayer!.node.on('completed', this.onCompleted, this);\r\n            //     this.videoPlayer!.node.on('meta-loaded', this.onMetaLoaded, this);\r\n            //     this.videoPlayer!.node.on('clicked', this.onClicked, this);\r\n            //     this.videoPlayer!.node.on('error', this.onError, this);\r\n\r\n            //     // 手动调用 ready-to-play 事件\r\n            //     this.onReadyToPlay();\r\n            // });\r\n\r\n            //本地文件加载\r\n            resources.load('SceneryVideo', (err, clip) => {\r\n                if (err) {\r\n                    log(`Failed to load video: ${err.message}`);\r\n                    return;\r\n                }\r\n                // 转换为 VideoClip 类型\r\n                const videoClip: VideoClip = clip as VideoClip;\r\n                // 设置 VideoPlayer 的 clip\r\n                this.videoPlayer.clip = videoClip;\r\n                this.videoPlayer.play();\r\n            });\r\n        }\r\n    }\r\n\r\n    onReadyToPlay() {\r\n        log('Video is ready to play');\r\n        if (this.videoPlayer) {\r\n            this.videoPlayer.play();\r\n        }\r\n    }\r\n\r\n    onPlaying() {\r\n        log('Video is playing');\r\n    }\r\n\r\n    onPaused() {\r\n        log('Video is paused');\r\n    }\r\n\r\n    onStopped() {\r\n        log('Video is stopped');\r\n    }\r\n\r\n    onCompleted() {\r\n        log('Video play completed');\r\n    }\r\n\r\n    onMetaLoaded() {\r\n        log('Video meta data loaded');\r\n    }\r\n\r\n    onClicked() {\r\n        log('Video is clicked');\r\n    }\r\n\r\n    onError() {\r\n        log('Video player encountered an error');\r\n    }\r\n}\r\n"]}