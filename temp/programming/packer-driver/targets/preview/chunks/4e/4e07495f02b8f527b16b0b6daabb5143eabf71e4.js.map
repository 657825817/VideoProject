{"version":3,"sources":["file:///D:/CocosCreator/VideoProject/assets/Script/AssetManagerVideoPlayer.ts"],"names":["_decorator","Component","VideoPlayer","log","assetManager","ccclass","property","AssetManagerVideoPlayer","onLoad","videoPlayer","loadRemote","reloadAsset","err","clip","message","videoClip","node","on","onReadyToPlay","onPlaying","onPaused","onStopped","onCompleted","onMetaLoaded","onClicked","onError","play"],"mappings":"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","sourcesContent":["import { _decorator, Component, VideoPlayer, log, assetManager, VideoClip, resources } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('AssetManagerVideoPlayer')\r\nexport class AssetManagerVideoPlayer extends Component {\r\n    @property(VideoPlayer)\r\n    videoPlayer: VideoPlayer | null = null;\r\n\r\n    onLoad() {\r\n        if (this.videoPlayer) {\r\n\r\n            //服务器加载\r\n            assetManager.loadRemote('SceneryVideo', { reloadAsset: true }, (err, clip) => {\r\n                if (err) {\r\n                    log(`Failed to load video: ${err.message}`);\r\n                    return;\r\n                }\r\n\r\n                // 转换为 VideoClip 类型\r\n                const videoClip: VideoClip = clip as VideoClip;\r\n\r\n                // 设置 VideoPlayer 的 clip\r\n                this.videoPlayer!.clip = videoClip;\r\n\r\n                // 添加事件监听\r\n                this.videoPlayer!.node.on('ready-to-play', this.onReadyToPlay, this);\r\n                this.videoPlayer!.node.on('playing', this.onPlaying, this);\r\n                this.videoPlayer!.node.on('paused', this.onPaused, this);\r\n                this.videoPlayer!.node.on('stopped', this.onStopped, this);\r\n                this.videoPlayer!.node.on('completed', this.onCompleted, this);\r\n                this.videoPlayer!.node.on('meta-loaded', this.onMetaLoaded, this);\r\n                this.videoPlayer!.node.on('clicked', this.onClicked, this);\r\n                this.videoPlayer!.node.on('error', this.onError, this);\r\n\r\n                // 手动调用 ready-to-play 事件\r\n                this.onReadyToPlay();\r\n            });\r\n\r\n            ////本地文件加载\r\n            // resources.load('SceneryVideo', (err, clip) => {\r\n            //     if (err) {\r\n            //         log(`Failed to load video: ${err.message}`);\r\n            //         return;\r\n            //     }\r\n            //     // 转换为 VideoClip 类型\r\n            //     const videoClip: VideoClip = clip as VideoClip;\r\n            //     // 设置 VideoPlayer 的 clip\r\n            //     this.videoPlayer!.clip = videoClip;\r\n            //     this.videoPlayer.play();\r\n            // });\r\n        }\r\n    }\r\n\r\n    onReadyToPlay() {\r\n        log('Video is ready to play');\r\n        if (this.videoPlayer) {\r\n            this.videoPlayer.play();\r\n        }\r\n    }\r\n\r\n    onPlaying() {\r\n        log('Video is playing');\r\n    }\r\n\r\n    onPaused() {\r\n        log('Video is paused');\r\n    }\r\n\r\n    onStopped() {\r\n        log('Video is stopped');\r\n    }\r\n\r\n    onCompleted() {\r\n        log('Video play completed');\r\n    }\r\n\r\n    onMetaLoaded() {\r\n        log('Video meta data loaded');\r\n    }\r\n\r\n    onClicked() {\r\n        log('Video is clicked');\r\n    }\r\n\r\n    onError() {\r\n        log('Video player encountered an error');\r\n    }\r\n}\r\n"]}